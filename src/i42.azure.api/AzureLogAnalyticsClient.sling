
/*
 * This file is part of i42
 * Copyright (c) 2022 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

class is AzureClient:

model LogAnalyticsWorkspaceProperties public
{
	name as string
}

func getLogAnalyticsWorkspace(name as string) async as dynamic
{
	var client = AzureApi.getOperationalInsightsManagementClient(context)
	return await client.workspaces.get(context.resourceGroup, name)
}

func updateLogAnalyticsWorkspace(properties as LogAnalyticsWorkspaceProperties) async as dynamic
{
	return await executeUpdate("Log Analytics Workspace", func async as dynamic {
		var client = AzureApi.getOperationalInsightsManagementClient(context)
		return await client.workspaces.beginCreateOrUpdateAndWait(context.resourceGroup, properties.name, {
			location context.location
			sku {
				name "pergb2018"
			}
			retentionInDays 30
			workspaceCapping {
				dailyQuotaGb -1
			}
			features {
				enableLogAccessUsingOnlyResourcePermissions true
				enableDataExport true
			}
			publicNetworkAccessForIngestion "Enabled"
			publicNetworkAccessForQuery "Enabled"
		})
	})
}

func getLogAnalyticsWorkspaceSharedKey(name as string) async as string
{
	var client = AzureApi.getOperationalInsightsManagementClient(context)
	var v = await client.sharedKeysOperations.getSharedKeys(context.resourceGroup, name)
    if not v:
        return null
	return String.asString(v.primarySharedKey)
}
