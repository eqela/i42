
/*
 * This file is part of i42
 * Copyright (c) 2022-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.log

class:

prop ctx as LoggingContext
prop context as AzureContext

ctor(ctx as jk.log.LoggingContext, context as AzureContext)
{
	this.ctx = ctx
	this.context = context
}

func executeUpdate(name as string, operation as function<promise<dynamic>>) async as dynamic
{
	var v as dynamic
	Log.status(ctx, "[Update] " .. name .. " ..")
	try {
		v = await operation()
	}
	catch e {
		Log.status(ctx, null)
		throw e
	}
	Log.status(ctx, null)
	Log.info(ctx, "Updated: `" .. name .. "'")
	Log.debug(ctx, String.asString(v))
	return v
}

func executeQuery(name as string, operation as function<promise<dynamic>>) async as dynamic
{
	var v as dynamic
	Log.status(ctx, "[Query] " .. name .. " ..")
	try {
		v = await operation()
	}
	catch e {
		Log.status(ctx, null)
		throw e
	}
	Log.status(ctx, null)
	Log.info(ctx, "Queried: `" .. name .. "'")
	Log.debug(ctx, String.asString(v))
	return v
}
