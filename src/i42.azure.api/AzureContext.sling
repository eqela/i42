
/*
 * This file is part of i42
 * Copyright (c) 2022-2023 J42 Pte Ltd
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import jk.jwt
import jk.env

class:

func forDefaultSettings static as this
{
	var sub = EnvironmentVariable.get("AZURE_SUBSCRIPTION_ID")
	if String.isEmpty(sub):
		Error.throw("environmentVariableNotSet", "AZURE_SUBSCRIPTION_ID")
	var loc = EnvironmentVariable.get("AZURE_LOCATION")
	if String.isEmpty(loc):
		Error.throw("environmentVariableNotSet", "AZURE_LOCATION")
	var rg = EnvironmentVariable.get("AZURE_RESOURCE_GROUP")
	if String.isEmpty(rg):
		Error.throw("environmentVariableNotSet", "AZURE_RESOURCE_GROUP")
	var v = new this()
	v.subscriptionId = sub
	v.location = loc
	v.resourceGroup = rg
	var credentials = new AzureCredentials()
	credentials.tenantId = EnvironmentVariable.get("AZURE_TENANT_ID")
	credentials.clientId = EnvironmentVariable.get("AZURE_CLIENT_ID")
	credentials.clientSecret = EnvironmentVariable.get("AZURE_CLIENT_SECRET")
	v.credentials = credentials
	return v
}

prop subscriptionId as string
prop location as string
prop resourceGroup as string
prop credentials as AzureCredentials

func createResourceId(provider as string, name as string) as string
{
	return "/subscriptions/" .. subscriptionId .. "/resourceGroups/" ..
		resourceGroup .. "/providers/" .. provider .. "/" .. name
}

func getCredentialsObject as dynamic
{
	if not credentials:
		credentials = new AzureCredentials()
	return credentials.getCredentialsObject()
}
